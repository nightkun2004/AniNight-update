<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Vtuber Chat</title>
    <link rel="stylesheet" href="/css/index.css">
    <link rel="shortcut icon" href="/logo/favicon.png" type="image/x-icon">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://kit.fontawesome.com/df26bd9708.js" crossorigin="anonymous"></script>
    <style>
        #chat-box {
    display: flex;
    flex-direction: column; /* เรียงข้อความจากบนลงล่าง */
    height: 56vh;
    overflow-y: auto; /* เพิ่ม scrollbar */
    padding: 10px;
}

        #chat-container {
            background: linear-gradient(135deg, #f9f9f9 0%, #ffffff 100%);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }
        #chat-box::-webkit-scrollbar {
            width: 5px;
        }
        #chat-box::-webkit-scrollbar-thumb {
            background: #d1d5db;
            border-radius: 10px;
        }
        .message {
            max-width: 75%;
            padding: 8px 12px;
            border-radius: 20px;
            word-wrap: break-word;
            margin-bottom: 10px;
        }
        .message-user {
            align-self: flex-end;
            background: #93c5fd;
            color: white;
            border-radius: 12px;
        }
        .message-ai {
            align-self: flex-start;
            background: #e5e7eb;
            color: black;
            border-radius: 12px;
        }

        /* Custom scroll bar styling */
        ::-webkit-scrollbar {
            width: 8px;
        }
        ::-webkit-scrollbar-thumb {
            background: #a0aec0;
            border-radius: 10px;
        }
        ::-webkit-scrollbar-thumb:hover {
            background: #718096;
        }
    </style>
</head>
<body class="bg-gray-100">
    <%- include('../Component/Header') %>
    <div class="bg-gray-50 shadow-lg rounded-xl p-6">
        <div class="flex flex-col md:flex-row p-2 gap-4">
            <div id="chat-container" class="bg-white border rounded-lg p-5 w-full h-full">
                <div id="chat-box" class="p-4 space-y-4 h-56 overflow-y-auto flex flex-col-reverse">
                   <!-- <div class="message-ai">
                    sd
                   </div>
                   <div class="message-user">
                    sd
                   </div> -->
                </div>
                <div>
                    <form id="chat-form" method="POST" action="/api/v2/user/ai/res/vtuber" class="mt-4 flex space-x-2">
                        <input id="message-input" name="message" type="text" class="flex-grow p-2 border rounded-lg focus:outline-none" placeholder="พิมพ์ข้อความที่นี่..." required>
                        <button id="send-button" type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">ส่ง</button>
                    </form>
                    <p class="text-center text-red-500">เวอร์ชั่นนี้เป็นการทดลอง อาจจะมีคำตอบไม่ตรงกับคำถาม เนื่องจากโทเคนน้อย</p>
                </div>
            </div>
            <div class="bg-white border rounded-lg w-full p-5 h-full">
                <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6579807593228261"
                    crossorigin="anonymous"></script>
                <ins class="adsbygoogle"
                    style="display:block"
                    data-ad-format="fluid"
                    data-ad-layout-key="-ef+6k-30-ac+ty"
                    data-ad-client="ca-pub-6579807593228261"
                    data-ad-slot="6551181691"></ins>
                <script>
                    (adsbygoogle = window.adsbygoogle || []).push({});
                </script>
                <h2>ประวัติแชท</h2>
                <div class="flex justify-center items-center">
                    <p>ประวัติแชทยังใช้งานไม่ได้</p>
                </div>
            </div>
        </div>
    </div>


    <main class="container mx-auto p-4">
        <!-- Filters Section -->
        <section class="mb-6">
            <h2 class="text-xl font-semibold mb-4">Filters</h2>
            <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                <!-- Year Filter -->
                <div>
                    <label for="year" class="block text-sm font-medium">Year</label>
                    <select id="year" class="w-full mt-2 p-2 border rounded bg-white">
                        <option value="">All</option>
                        <option value="2025">2025</option>
                        <option value="2024">2024</option>
                        <option value="2023">2023</option>
                        <option value="2022">2022</option>
                        <!-- Add more years as needed -->
                    </select>
                </div>
                <!-- Season Filter -->
                <div>
                    <label for="season" class="block text-sm font-medium">Season</label>
                    <select id="season" class="w-full mt-2 p-2 border rounded bg-white">
                        <option value="">All</option>
                        <option value="WINTER">Winter</option>
                        <option value="SPRING">Spring</option>
                        <option value="SUMMER">Summer</option>
                        <option value="FALL">Fall</option>
                    </select>
                </div>
                <!-- Genre Filter -->
                <div>
                    <label for="genre" class="block text-sm font-medium">Genre</label>
                    <select id="genre" class="w-full mt-2 p-2 border rounded bg-white">
                        <option value="">All</option>
                        <option value="Action">Action</option>
                        <option value="Adventure">Adventure</option>
                        <option value="Comedy">Comedy</option>
                        <option value="Drama">Drama</option>
                        <!-- Add more genres as needed -->
                    </select>
                </div>
            </div>
        </section>

        <!-- Anime List Section -->
        <section>
            <h2 class="text-xl font-semibold mb-4">Anime List</h2>
            <div id="anime-list" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4">
                <!-- Dynamic content will be injected here -->
            </div>
        </section>

        <!-- Pagination -->
        <section class="mt-6 text-center">
            <button id="load-more" class="bg-blue-600 text-white px-4 py-2 rounded shadow hover:bg-blue-700">
                เพิ่มเติม
            </button>
        </section>
    </main>
    <%- include('../Component/Footer') %>

    <script>
        const chatBox = document.getElementById('chat-box');
        const messageInput = document.getElementById('message-input');
        const sendButton = document.getElementById('send-button');

        document.getElementById('chat-form').addEventListener('submit', async (event) => {
            event.preventDefault();  

            const user_message = messageInput.value.trim();
            if (!user_message) return;  // ถ้าไม่พิมพ์ข้อความ จะไม่ทำอะไร

            // แสดงข้อความผู้ใช้ใน UI
            addMessage('คุณ', user_message, 'message-user');
            messageInput.value = '';  // ล้างช่องข้อความ

            sendButton.disabled = true;
            sendButton.textContent = 'กำลังส่ง...';

            try {
                const response = await fetch('/api/v2/user/ai/res/vtuber', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ user_message })  // ส่งข้อความไปยัง backend
                });

                if (response.ok) {
                    const result = await response.json();
                    // แสดงข้อความจาก AI
                    addMessage('เรโอะจัง', result.ai_response, 'message-ai');
                } else {
                    console.error('Error:', response.statusText);
                }
            } catch (error) {
                console.error('Error:', error);
            } finally {
                sendButton.disabled = false;
                sendButton.textContent = 'ส่ง';
            }
        });

        // ฟังก์ชันเพิ่มข้อความลงใน chat box
function addMessage(sender, user_message, className) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `message-container ${className} flex`;

    // เพิ่มข้อความ
    const messageText = document.createElement('div');
    messageText.className = `message ${className}`;
    messageText.textContent = `${sender}: ${user_message}`;

    messageDiv.appendChild(messageText);
    chatBox.appendChild(messageDiv);

    // เลื่อนแชทไปตำแหน่งล่าสุด
    chatBox.scrollTop = chatBox.scrollHeight;
}


    </script>

<script>
    const query = `
        query ($page: Int, $perPage: Int, $season: MediaSeason, $seasonYear: Int, $genre: String) {
            Page(page: $page, perPage: $perPage) {
                pageInfo {
                    total
                    currentPage
                    lastPage
                    hasNextPage
                    perPage
                }
                media(type: ANIME, season: $season, seasonYear: $seasonYear, genre: $genre) {
                    id
                    title {
                        romaji
                        english
                    }
                    coverImage {
                        large
                    }
                    episodes
                    genres
                    season
                    seasonYear
                }
            }
        }
    `;

    const url = 'https://graphql.anilist.co';
    let currentPage = 1;
    const variables = { page: currentPage, perPage: 10, season: null, seasonYear: null, genre: null };

    const renderAnimeList = (animeList) => {
        const container = document.getElementById('anime-list');
        animeList.forEach(anime => {
            const animeCard = document.createElement('div');
            animeCard.className = 'bg-white shadow rounded overflow-hidden';
            animeCard.innerHTML = `
                <img src="${anime.coverImage.large}" alt="${anime.title.romaji}" class="w-full h-48 object-cover">
                <div class="p-2">
                    <h3 class="font-semibold text-sm">${anime.title.romaji}</h3>
                    <p class="text-xs text-gray-600">Episodes: ${anime.episodes || 'N/A'}</p>
                    <p class="text-xs text-gray-600">${anime.genres.join(', ')}</p>
                </div>
            `;
            container.appendChild(animeCard);
        });
    };

    const fetchAnimeList = () => {
        fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
            body: JSON.stringify({ query, variables })
        })
            .then(response => response.json())
            .then(data => {
                renderAnimeList(data.data.Page.media);
                const hasNextPage = data.data.Page.pageInfo.hasNextPage;
                if (!hasNextPage) document.getElementById('load-more').classList.add('hidden');
            })
            .catch(error => console.error(error));
    };

    const applyFilters = () => {
        const year = document.getElementById('year').value;
        const season = document.getElementById('season').value;
        const genre = document.getElementById('genre').value;

        variables.page = 1;
        variables.seasonYear = year ? parseInt(year) : null;
        variables.season = season || null;
        variables.genre = genre || null;

        document.getElementById('anime-list').innerHTML = '';
        fetchAnimeList();
    };

    document.getElementById('year').addEventListener('change', applyFilters);
    document.getElementById('season').addEventListener('change', applyFilters);
    document.getElementById('genre').addEventListener('change', applyFilters);
    document.getElementById('load-more').addEventListener('click', () => {
        variables.page++;
        fetchAnimeList();
    });

    fetchAnimeList();
</script>
</body>
</html>

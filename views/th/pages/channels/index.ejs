<!DOCTYPE html>
<html lang="th" class="dark">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= channel.username %> | Channel
    </title>
    <link rel="stylesheet" href="/css/index.css">
    <link rel="shortcut icon" href="/logo/favicon.png" type="image/x-icon">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.8/css/line.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://kit.fontawesome.com/df26bd9708.js" crossorigin="anonymous"></script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6579807593228261"
        crossorigin="anonymous"></script>
        <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
        <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-LTJP520FN4"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-LTJP520FN4');
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body class="bg-white-color dark:bg-white-color transition-colors duration-300 font-open-sans">

    <div class="flex flex-col h-screen overflow-hidden">
        <%- include('../../Component/Header/Header') %>
            <!-- Main Layout -->
            <main class="flex flex-1 overflow-hidden">
                <%- include('../../Component/Sidebar/Sidebar') %>
                    <!-- Overlay สำหรับหน้าจอขนาดเล็กเมื่อ Sidebar เปิด -->
                    <div id="overlay"
                        class="fixed inset-0 bg-overlay-dark-color opacity-0 pointer-events-none transition-opacity duration-300 md:hidden">
                    </div>

                    <!-- Content Wrapper -->
                    <div class="flex-1 overflow-auto p-4 content-layout md:ml-[270px] lg:ml-[250px]">
                        <section class="container mx-auto px-4 py-8 bg-white rounded-lg shadow">
                            <% if (channel.bannerImagePath) {%>
                                <div class="banner relative w-full h-40 sm:h-64">
                                    <img style="user-select: none;" src="/uploads/banners/<%= channel.bannerImagePath %>" alt="banner" class="w-full rounded-lg h-full object-cover">
                                </div>
                            <% } %>
                            <div class="flex flex-col md:flex-row items-center mt-5">
                                <img src="/uploads/profiles/<%= channel.profilePicture %>" alt="Profile Picture"
                                    class="w-32 h-32 rounded-full object-cover">
                                <div class="md:ml-6 mt-4 md:mt-0 text-center md:text-left">
                                    <h2 class="text-2xl font-semibold"><%= channel.username %></h2>
                                    <p class="text-gray-600 mt-2"><%= channel.bio %></p>
                                    <div class="mt-4 flex justify-center sm:justify-start space-x-4">
                                        <span class="text-sm text-gray-600"><strong> <%= formatNumber(channel.followers.length) %></strong> : ผู้ติดตาม</span>
                                        <span class="text-sm text-gray-600"><strong><%= formatNumber(channel.following.length) %></strong> : กำลังติดตาม</span>
                                    </div>
                                    <ul class="items-center">
                                        <li class="text-sm text-gray-400"><strong class="font-medium">วันที่เข้าร่วม:</strong> <%= new Date(channel.createdAt).toLocaleDateString() %></li>
                                    </ul>
                                    <div class="mt-4 flex justify-center md:justify-start">
                                        <% if (userID) { %>
                                            <% if (channel.followers.includes(userID.user._id)) { %>
                                                <!-- ปุ่มยกเลิกติดตาม (แสดงเมื่อผู้ใช้ติดตามช่องนี้แล้ว) -->
                                                <button id="unfollow-btn" class="text-red-500 hover:bg-red-100 px-4 py-2 rounded-lg"
                                                    onclick="confirmUnfollow('<%= channel._id %>')">
                                                    <i class="fa-solid fa-user-minus"></i> ยกเลิกติดตาม
                                                </button>
                                            <% } else { %>
                                                <!-- ปุ่มติดตาม (แสดงเมื่อผู้ใช้ยังไม่ได้ติดตามช่องนี้) -->
                                                <button id="follow-btn" class="text-blue-500 hover:bg-blue-100 px-4 py-2 rounded-lg"
                                                        onclick="toggleFollow('<%= channel._id %>')">
                                                    <i class="fa-solid fa-user-plus"></i> ติดตาม
                                                </button>
                                            <% } %>
                                        <% } else { %>
                                          <a href="/auth/login" class="bg-pink-600 px-4 py-2 hover:bg-pink-800 rounded-lg text-white">ติดตาม</a>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        </section>


                        <section class="container mx-auto px-4 py-8">
                            <h3 class="text-xl font-semibold mb-6">ผลงานล่าสุด</h3>
                    
                            <div class="flex mb-6">
                                <button class="filter-btn bg-blue-600 text-white px-4 py-2 rounded mr-2" data-filter="all">ทั้งหมด</button>
                                <button class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded mr-2"
                                    data-filter="video">วิดีโอ</button>
                                <button class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded mr-2"
                                    data-filter="article">บทความ</button>
                                <button class="filter-btn bg-gray-200 text-gray-700 px-4 py-2 rounded" data-filter="image">รูปภาพ</button>
                            </div>
                            <div>
                                <% if (channel.role === 'content_creator') { %>
                                  <% if (channel.articles.length > 0) { %>
                                    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
                                      <% channel.articles.forEach(article => { %>
                                        <div class="content-item bg-white rounded-lg shadow overflow-hidden video">
                                          <img src="https://via.placeholder.com/400x300" alt="Video Thumbnail" class="w-full h-48 object-cover">
                                          <div class="p-4">
                                            <h4 class="font-semibold text-lg"><%= article.title %></h4>
                                            <p class="text-gray-600 mt-2"><%= article.description %></p>
                                          </div>
                                        </div>
                                      <% }); %>
                                    </div>
                                  <% } else { %>
                                    <p class="text-gray-600">ยังไม่ได้เขียนบทความ</p>
                                  <% } %>
                                <% } %>
                              </div>
                              
                        </section>
            </main>
    </div>

    <!-- <script>
        document.addEventListener('DOMContentLoaded', () => {
            // ตัวอย่างฟังก์ชันสำหรับการกรองผลงาน
            const filterButtons = document.querySelectorAll('.filter-btn');
            const contentItems = document.querySelectorAll('.content-item');

            filterButtons.forEach(button => {
                button.addEventListener('click', () => {
                    const filter = button.getAttribute('data-filter');

                    // เปลี่ยนสีปุ่มที่ถูกเลือก
                    filterButtons.forEach(btn => {
                        if (btn === button) {
                            btn.classList.remove('bg-gray-200', 'text-gray-700');
                            btn.classList.add('bg-blue-600', 'text-white');
                        } else {
                            btn.classList.remove('bg-blue-600', 'text-white');
                            btn.classList.add('bg-gray-200', 'text-gray-700');
                        }
                    });

                    contentItems.forEach(item => {
                        if (filter === 'all' || item.classList.contains(filter)) {
                            item.classList.remove('hidden');
                        } else {
                            item.classList.add('hidden');
                        }
                    });
                });
            });
        });

    </script> -->
    <script>
        function toggleFollow(channelId) {
            fetch(`/api/v2/user/follow/${channelId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'ติดตามสำเร็จ',
                        text: data.message,
                        confirmButtonText: 'ตกลง'
                    }).then(() => {
                        location.reload(); // รีเฟรชหน้าเมื่อกดติดตาม
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: data.message
                    });
                }
            })
            .catch(err => console.error(err));
        }
    
        function confirmUnfollow(channelId) {
    Swal.fire({
        title: 'ยืนยันการยกเลิกติดตาม?',
        text: "คุณต้องการยกเลิกการติดตามใช่หรือไม่?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'ใช่, ยกเลิกติดตาม!',
        cancelButtonText: 'ยกเลิก'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/api/v2/user/unfollow/${channelId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                // ตรวจสอบสถานะของการตอบกลับ
                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'ยกเลิกติดตามสำเร็จ',
                        text: data.message,
                        confirmButtonText: 'ตกลง'
                    }).then(() => {
                        location.reload(); // รีเฟรชหน้าเมื่อยกเลิกติดตาม
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'เกิดข้อผิดพลาด',
                        text: data.message
                    });
                }
            })
            .catch(err => {
                // แสดงข้อผิดพลาดที่เกิดขึ้น
                Swal.fire({
                    icon: 'error',
                    title: 'เกิดข้อผิดพลาดที่ไม่รู้จัก',
                    text: err.message // แสดงเฉพาะข้อความของข้อผิดพลาด
                });
            });
        }
    });
}

    </script>
    

    <script>
        const menuButtons = document.querySelectorAll(".menu-button");
        const screenOverlay = document.getElementById("overlay");
        const themeButton = document.getElementById("theme-toggle");
        const htmlElement = document.documentElement;
        const sidebar = document.getElementById("sidebar");
        const closeSidebarButton = document.getElementById("close-sidebar");

        // Toggle sidebar visibility when menu buttons are clicked
        menuButtons.forEach(button => {
            button.addEventListener("click", () => {
                document.body.classList.toggle("sidebar-hidden");
                sidebar.classList.toggle("translate-x-0");
                sidebar.classList.toggle("-translate-x-full");
                screenOverlay.classList.toggle("opacity-0");
                screenOverlay.classList.toggle("pointer-events-none");
            });
        });

        // Toggle sidebar visibility when screen overlay is clicked
        screenOverlay.addEventListener("click", () => {
            document.body.classList.toggle("sidebar-hidden");
            sidebar.classList.toggle("translate-x-0");
            sidebar.classList.toggle("-translate-x-full");
            screenOverlay.classList.toggle("opacity-0");
            screenOverlay.classList.toggle("pointer-events-none");
        });

        // Initialize dark mode based on localStorage
        if (localStorage.getItem("darkMode") === "enabled") {
            htmlElement.classList.add("dark");
            themeButton.querySelector("i").classList.replace("uil-moon", "uil-sun");
        } else {
            themeButton.querySelector("i").classList.replace("uil-sun", "uil-moon");
        }

        // Toggle dark mode when theme button is clicked
        themeButton.addEventListener("click", () => {
            const isDarkMode = htmlElement.classList.toggle("dark");
            localStorage.setItem("darkMode", isDarkMode ? "enabled" : "disabled");
            const icon = themeButton.querySelector("i");
            if (isDarkMode) {
                icon.classList.replace("uil-moon", "uil-sun");
            } else {
                icon.classList.replace("uil-sun", "uil-moon");
            }
        });

        // Show sidebar on large screens by default
        if (window.innerWidth >= 768) {
            document.body.classList.remove("sidebar-hidden");
            sidebar.classList.remove("-translate-x-full");
            sidebar.classList.add("translate-x-0");
            screenOverlay.classList.add("opacity-0", "pointer-events-none");
        }

        // ปรับการแสดงผลเมื่อขนาดหน้าจอเปลี่ยน
        window.addEventListener("resize", () => {
            if (window.innerWidth >= 768) {
                document.body.classList.remove("sidebar-hidden");
                sidebar.classList.remove("-translate-x-full");
                sidebar.classList.add("translate-x-0");
                screenOverlay.classList.add("opacity-0", "pointer-events-none");
            } else {
                sidebar.classList.add("-translate-x-full");
                sidebar.classList.remove("translate-x-0");
            }
        });
    </script>
</body>

</html>